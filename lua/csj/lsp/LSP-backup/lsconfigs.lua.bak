-- Python
require('lspconfig').pyright.setup{}

-- Bash
require('lspconfig').bashls.setup{
    filetypes = { "sh", "zsh", "bash" }
}

-- Javascript and Typescript
require('lspconfig').tsserver.setup{}
-- require('lspconfig').tsserver.setup{
--     root_dir = root_pattern('package.json', 'tsconfig.json', 'jsconfig.json', '.git')
-- }

-- HTML
require('lspconfig').html.setup{
    on_attach = on_attach,
    capabilities = capabilities,
    filetypes = { 'html' },
    init_options = {
        configurationSection = { 'html', 'css', 'javascript', 'typescript' },
        embeddedLanguages = {
            css = true,
            javascript = true,
            javascriptreact = true,
            typescript = true,
            typescriptreact = true,
        }
    },
    settings = {},
    single_file_support = true,
}

-- CSS
require('lspconfig').cssls.setup{
    on_attach = on_attach,
    capabilities = capabilities,
}

-- Json
require('lspconfig').jsonls.setup{
    on_attach = on_attach,
    capabilities = capabilities,
}

-- Lua
local sumneko_root_path = "/usr/bin/"
local sumneko_binary = sumneko_root_path .. 'lua-language-server'

-- Make runtime files discoverable to the server
local runtime_path = vim.split(package.path, ';')
table.insert(runtime_path, 'lua/?.lua')
table.insert(runtime_path, 'lua/?/init.lua')

require('lspconfig').sumneko_lua.setup {
    cmd = { sumneko_binary, '-E', sumneko_root_path .. 'main.lua' },
    on_attach = on_attach,
    capabilities = capabilities,
    settings = {
        Lua = {
            runtime = {
                version = 'LuaJIT', -- Tell the language server which version of Lua you're using
                path = runtime_path, -- Setup your lua path
            },
            diagnostics = {
                globals = { 'vim' }, -- Get the language server to recognize the `vim` global
            },
            workspace = {
                library = vim.api.nvim_get_runtime_file('', true), -- Make the server aware of Neovim runtime files
            },
            telemetry = {
                enable = false, -- Do not send telemetry data containing a randomized but unique identifier
            },
        },
    },
}
